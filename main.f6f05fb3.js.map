{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","labels","map","input","name","split","wordName","toLocaleUpperCase","join","trim","placeholder","slice","id","i","length","insertAdjacentHTML"],"mappings":";AAAA,aA+BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFD,IA3BA,IAAMA,EAAaC,EAAAA,SAASC,iBAAiB,UAEvCC,EAASH,EAAOI,IAAI,SAAAC,GAiBfA,OAhBTA,EAAMC,KAAOD,EAAMC,KAChBC,MAAM,IACNH,IAAI,SAAAI,GACCA,OAAAA,IAAaA,EAASC,oBACbD,IAAAA,OAAAA,GAGNA,IAERE,KAAK,IACLC,OAEHN,EAAMO,YAAcP,EAAMC,KAAK,GAAGG,oBAAsBJ,EAAMC,KAAKO,MAAM,GAIhER,8CAAAA,OAAAA,EAAMS,GAEXT,gBAAAA,OAAAA,EAAMC,KAJV,sBAUOS,EAAI,EAAGA,EAAIf,EAAOgB,OAAQD,IACjCf,EAAOe,GAAGE,mBAAmB,cAAed,EAAOY","file":"main.f6f05fb3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\nconst labels = inputs.map(input => {\n  input.name = input.name\n    .split('')\n    .map(wordName => {\n      if (wordName === wordName.toLocaleUpperCase()) {\n        return ` ${wordName}`;\n      }\n\n      return wordName;\n    })\n    .join('')\n    .trim();\n\n  input.placeholder = input.name[0].toLocaleUpperCase() + input.name.slice(1);\n\n  return `<label \n    class=\"field-label\"\n    for=\"${input.id}\"\n  >\n    ${input.name}\n  </label>\n  `;\n}\n);\n\nfor (let i = 0; i < inputs.length; i++) {\n  inputs[i].insertAdjacentHTML('beforebegin', labels[i]);\n}\n"]}